// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240207140932_database")]
    partial class database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.26");

            modelBuilder.Entity("Data.Entities.ProducerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Producer1",
                            Name = "Producer1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Producer2",
                            Name = "Producer2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description for Producer3",
                            Name = "Producer3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description for Producer4",
                            Name = "Producer4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description for Producer5",
                            Name = "Producer5"
                        });
                });

            modelBuilder.Entity("Data.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProducerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Product1",
                            Name = "Product1",
                            Price = 49.747095326631300m,
                            ProducerId = 2,
                            ProductionDate = new DateTime(2023, 5, 9, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4141)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Product2",
                            Name = "Product2",
                            Price = 38.493835067853400m,
                            ProducerId = 5,
                            ProductionDate = new DateTime(2024, 1, 28, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4178)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description for Product3",
                            Name = "Product3",
                            Price = 18.015648385266500m,
                            ProducerId = 5,
                            ProductionDate = new DateTime(2023, 7, 1, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4181)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description for Product4",
                            Name = "Product4",
                            Price = 41.793481868608100m,
                            ProducerId = 4,
                            ProductionDate = new DateTime(2024, 1, 29, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4208)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description for Product5",
                            Name = "Product5",
                            Price = 94.145126426487300m,
                            ProducerId = 5,
                            ProductionDate = new DateTime(2023, 8, 23, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4211)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description for Product6",
                            Name = "Product6",
                            Price = 30.722479614157300m,
                            ProducerId = 2,
                            ProductionDate = new DateTime(2024, 1, 15, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4214)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description for Product7",
                            Name = "Product7",
                            Price = 78.898362568490400m,
                            ProducerId = 5,
                            ProductionDate = new DateTime(2024, 1, 4, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4217)
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description for Product8",
                            Name = "Product8",
                            Price = 71.6072458916600m,
                            ProducerId = 1,
                            ProductionDate = new DateTime(2023, 4, 26, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4219)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description for Product9",
                            Name = "Product9",
                            Price = 61.514679427223800m,
                            ProducerId = 3,
                            ProductionDate = new DateTime(2023, 12, 11, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4222)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description for Product10",
                            Name = "Product10",
                            Price = 10.777473707995300m,
                            ProducerId = 4,
                            ProductionDate = new DateTime(2023, 10, 9, 15, 9, 32, 408, DateTimeKind.Local).AddTicks(4225)
                        });
                });

            modelBuilder.Entity("Data.Entities.ProductEntity", b =>
                {
                    b.HasOne("Data.Entities.ProducerEntity", "Producer")
                        .WithMany("Products")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Data.Entities.ProducerEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
